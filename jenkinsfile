pipeline {
agent any
environment {
//once you create ACR in Azure cloud, use that here
registryName = "adil/petclinic1"
//- update your credentials ID after creating credentials for connecting to ACR
registryCredential = 'ACR'
dockerImage = ''
registryUrl = 'myregistryadil.azurecr.io'
}
     tools {
     maven 'M3'
     terraform 'terraform'
    }
       stages {
       stage('Build Maven') {
            steps{
            checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'adil1', url: 'https://github.com/AdilTesting/Projet.git']]])
             //sh "mvn -Dmaven.test.failure.ignore=true clean package"
             sh "mvn -Dmaven.test.failure.ignore=true clean package -PMySQLAZURE1"
            }
        }
        stage('Build Docker image') {
            steps {
            script {
            dockerImage = docker.build registryName
       }
   }
}
        //stage('deployer in the dockerhub') {
         //  steps {
          // script {
           // sh 'docker login -u docker7516 -p 123456789'
           // sh 'docker push adil/petclinic1:latest'
      // }
   //}
//}
        stage('Push Image to ACR') {
           steps {
           script {
                  docker.withRegistry( "http://${registryUrl}", registryCredential ) {
                  dockerImage.push()
                  }
               }
           }
       }
       stage ('K8S Deploy') {
             steps {
                 script {
                     kubernetesDeploy configs: 'deployment.yml', kubeConfig: [path: ''], kubeconfigId: 'K8S', secretName: '', ssh: [sshCredentialsId: '*', sshServer: ''], textCredentials: [certificateAuthorityData: '', clientCertificateData: '', clientKeyData: '', serverUrl: 'https://']
                }
           }
        }
    }
}   
